CREATE TABLE AVS_AVISO_FUNCIONARIO
(
AVS_ID INT IDENTITY (1,1) PRIMARY KEY,
AVS_NOME_FUNCIONARIO VARCHAR (70) NOT NULL,
AVS_HORAS_TRABALHADAS CHAR (8) NOT NULL,
AVS_DATA_AVISO DATE NOT NULL,
AVS_HORAS_EXTRAS CHAR(8)
)

ALTER PROCEDURE SPE_NOTIFICAR_HORAS_EXTRAS @P_DATA_REFERENCIA DATE,
                                           @QTDE_EVENTOS INT OUTPUT
AS
BEGIN
        IF EOMONTH(@P_DATA_REFERENCIA) = @P_DATA_REFERENCIA
		BEGIN;
		   -- RAISERROR('O ULTIMO DIA DO MES NÃO PODE GERAR AVISOS',11,1)
		   THROW 50000,'O ULTIMO DIA DO MES NÃO PODE GERAR AVISO',1;         
			PRINT 'O ERRO FOI ARREMESSADO'
		END;
    SET NOCOUNT ON;
            DECLARE CR_FUNCIONARIOS CURSOR FOR
			SELECT  NOME, HORAS_TRABALHADA,DATA FROM DBO.VW_PONTO_FUNCIONARIOS 
			WHERE DATA = @P_DATA_REFERENCIA;

        IF OBJECT_ID(N'TEMPDB..#HORAS_EXTRAS') IS NULL
		BEGIN
		    --CRIAR TABELA
			CREATE TABLE #HORAS_EXTRAS(
			 NOME_FUNCIONARIO VARCHAR(70),
			 HORAS_TRABALHADAS CHAR (8),
			 DATA_EVENTO DATE,
			 HORAS_EXTRAS CHAR(8)
			 
			);	
		END
		ELSE
		BEGIN
		    DELETE FROM #HORAS_EXTRAS;
		END;
		
		DECLARE @NOME_FUNCIONARIO VARCHAR (70);
		DECLARE @HORAS_TRABALHADAS CHAR(8);
		DECLARE @DATA DATE;
		DECLARE @HORAS_EXTRAS CHAR(8);
	    DECLARE @TEMPO INT
		DECLARE @TEMPO_TRABALHADO INT;
		SET @TEMPO = 28800
		
		OPEN CR_FUNCIONARIOS;
		FETCH NEXT FROM CR_FUNCIONARIOS
		INTO  @NOME_FUNCIONARIO, @HORAS_TRABALHADAS, @DATA
		WHILE @@FETCH_STATUS = 0
		BEGIN
		   SET @TEMPO_TRABALHADO = DATEPART(SECOND,CONVERT(TIME(0), @HORAS_TRABALHADAS)) +
		                           DATEPART(MINUTE,CONVERT(TIME(0), @HORAS_TRABALHADAS)) * 60 +
								   DATEPART(HOUR,  CONVERT(TIME(0), @HORAS_TRABALHADAS)) * 3600;	
								   	                 
         IF @TEMPO_TRABALHADO  > 8*60*60
		 BEGIN 
		 
		  SET @TEMPO_TRABALHADO = @TEMPO_TRABALHADO - @TEMPO
		   
		   SET @HORAS_EXTRAS = FORMAT(@TEMPO_TRABALHADO / 3600,'00')+':'+
		                       FORMAT((@TEMPO_TRABALHADO % 3600) /60,'00')+':'+
							   FORMAT((@TEMPO_TRABALHADO % 3600)% 60,'00')

		    INSERT INTO #HORAS_EXTRAS (NOME_FUNCIONARIO,HORAS_TRABALHADAS,DATA_EVENTO,HORAS_EXTRAS)
			VALUES (@NOME_FUNCIONARIO,@HORAS_TRABALHADAS,@DATA,@HORAS_EXTRAS)
		 END;  
		FETCH NEXT FROM CR_FUNCIONARIOS
		INTO  @NOME_FUNCIONARIO,@HORAS_TRABALHADAS,@DATA--,@HORAS_EXTRAS
		END;

		CLOSE CR_FUNCIONARIOS;
		DEALLOCATE CR_FUNCIONARIOS;

		INSERT INTO AVS_AVISO_FUNCIONARIO (AVS_NOME_FUNCIONARIO,AVS_HORAS_TRABALHADAS,AVS_DATA_AVISO,AVS_HORAS_EXTRAS)
		SELECT NOME_FUNCIONARIO,HORAS_TRABALHADAS, DATA_EVENTO, HORAS_EXTRAS FROM #HORAS_EXTRAS
		SELECT @QTDE_EVENTOS = COUNT(*)FROM AVS_AVISO_FUNCIONARIO;
	SET NOCOUNT OFF;
END;

CREATE TABLE LOGS_EVENTOS
(
LOG_ID INT IDENTITY(1,1)PRIMARY KEY,
LOG_EVENTO VARCHAR (300) NOT NULL
);


BEGIN TRANSACTION
DECLARE @QTDE_HORAS_EXTTRAS INT ;
BEGIN TRY
INSERT INTO LOGS_EVENTOS(LOG_EVENTO) VALUES ('A PROCEDURE DBO.SPE_NOTIFICAR_HORAS_EXTARS ESTA SENDO EXECUTADA')
EXECUTE DBO.SPE_NOTIFICAR_HORAS_EXTRAS '2017-03-27', @QTDE_EVENTOS = @QTDE_HORAS_EXTTRAS OUTPUT
SELECT @QTDE_HORAS_EXTTRAS AS QUANTIDADE_EVENTOS
INSERT INTO LOGS_EVENTOS(LOG_EVENTO) VALUES ('A PROCEDURE DBO.SPE_NOTIFICAR_HORAS_EXTARS FOI EXECUTADA')
COMMIT;
END TRY

BEGIN CATCH 
ROLLBACK;
PRINT'HOUVE UM ERRO AO REALIZAR O PROCESSAMENTO'
PRINT ERROR_MESSAGE();

PRINT 'SEVERIDADE:'
PRINT ERROR_SEVERITY();

PRINT 'ESTADO'
PRINT ERROR_STATE();
END CATCH;


